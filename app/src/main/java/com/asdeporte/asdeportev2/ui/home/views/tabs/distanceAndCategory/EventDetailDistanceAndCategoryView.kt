package com.asdeporte.asdeportev2.ui.home.views.tabs.distanceAndCategoryimport android.content.Contextimport android.util.AttributeSetimport android.view.LayoutInflaterimport android.widget.FrameLayoutimport androidx.recyclerview.widget.LinearLayoutManagerimport com.asdeporte.asdeportev2.databinding.EventDetailViewDistanceAndCategoryBindingimport com.asdeporte.asdeportev2.databinding.EventDetailViewDistanceAndCategoryMainBindingimport com.asdeporte.asdeportev2.ui.home.adapters.tabs.distanceAndCategory.MainNotesAdapterimport com.asdeporte.asdeportev2.ui.home.adapters.tabs.distanceAndCategory.MainSectionsAdapterimport com.asdeporte.asdeportev2.ui.home.adapters.tabs.distanceAndCategory.NotesAdapterimport com.asdeporte.asdeportev2.ui.home.adapters.tabs.distanceAndCategory.SectionsAdapterimport com.asdeporte.asdeportev2.ui.home.models.tabs.distanceAndCategory.DistanceAndCategoryModelclass EventDetailDistanceAndCategoryView @JvmOverloads constructor(        context: Context,        attrs: AttributeSet? = null,        defStyle: Int = 0) : FrameLayout(context, attrs, defStyle) {    private var binding: EventDetailViewDistanceAndCategoryMainBinding    init {        binding = EventDetailViewDistanceAndCategoryMainBinding.inflate(LayoutInflater.from(context), this, true)    }    fun setData(data: DistanceAndCategoryModel) {        val adapterSection = MainSectionsAdapter(data.sections)        val adapterNote = MainNotesAdapter(data.notes)        binding.apply {            rvSections.apply {                this.adapter = adapterSection                setHasFixedSize(true)                layoutManager = LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false)                isNestedScrollingEnabled = true            }            rvNotes.apply {                this.adapter = adapterNote                setHasFixedSize(true)                layoutManager = LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false)                isNestedScrollingEnabled = true            }        }    }}