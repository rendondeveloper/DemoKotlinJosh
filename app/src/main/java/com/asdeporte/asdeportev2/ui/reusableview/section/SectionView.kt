package com.asdeporte.asdeportev2.ui.reusableview.sectionimport android.content.Contextimport android.util.AttributeSetimport android.view.LayoutInflaterimport android.view.Viewimport android.widget.FrameLayoutimport androidx.recyclerview.widget.LinearLayoutManagerimport androidx.recyclerview.widget.RecyclerViewimport com.asdeporte.asdeportev2.Rimport com.asdeporte.asdeportev2.databinding.SectionViewBindingimport com.asdeporte.asdeportev2.ui.home.adapters.tabs.inscriptionAndPrice.EventServicesAdapterimport com.asdeporte.asdeportev2.ui.home.adapters.tabs.inscriptionAndPrice.InscriptionWayAdapterimport com.asdeporte.asdeportev2.ui.home.adapters.tabs.inscriptionAndPrice.KitAdapterimport com.asdeporte.asdeportev2.ui.home.adapters.tabs.inscriptionAndPrice.PayAdapterimport com.asdeporte.asdeportev2.ui.home.adapters.tabs.inscriptionAndPrice.PriceInscriptionAdapterclass SectionView @JvmOverloads constructor(        context: Context,        attrs: AttributeSet? = null,        defStyle: Int = 0) : FrameLayout(context, attrs, defStyle) {    private var binding: SectionViewBinding    private var title: String? = null    private var subTitle: String? = null    private var description: String? = null    private var footer: String? = null    init {        binding = SectionViewBinding.inflate(LayoutInflater.from(context), this, true)        attrs?.let {            val typeArray = getContext().obtainStyledAttributes(attrs, R.styleable.SectionView)            val maxLength = typeArray.indexCount            for (counter in 0..maxLength) {                when (typeArray.getIndex(counter)) {                    R.styleable.SectionView_section_title -> {                        title = typeArray.getString(R.styleable.SectionView_section_title)                    }                    R.styleable.SectionView_section_sub_title -> {                        subTitle = typeArray.getString(R.styleable.SectionView_section_sub_title)                    }                    R.styleable.SectionView_section_description -> {                        description = typeArray.getString(R.styleable.SectionView_section_description)                    }                    R.styleable.SectionView_section_footer -> {                        footer = typeArray.getString(R.styleable.SectionView_section_footer)                    }                }            }        }        setTitle(title)        setSubTitle(subTitle)        setDescription(description)        setFooter(footer)    }    private fun setTitle(text: String?) {        binding.tvTitle.text = text        binding.tvTitle.visibility = text?.let { View.VISIBLE } ?: View.GONE    }    fun setSubTitle(text: String?) {        binding.tvSubtitle.text = text        binding.tvSubtitle.visibility = text?.let { View.VISIBLE } ?: View.GONE    }    private fun setDescription(text: String?) {        binding.tvDescription.text = text        binding.tvDescription.visibility = text?.let { View.VISIBLE } ?: View.GONE    }    fun setFooter(text: String?) {        binding.tvFooter.text = text        binding.tvFooter.visibility = text?.let { View.VISIBLE } ?: View.GONE    }    fun setFooter(text: Int?) {        binding.tvFooter.text = text?.let { context.getText(text) }        binding.tvFooter.visibility = text?.let { View.VISIBLE } ?: View.GONE    }    fun setData(adapterCustom: Any, orientation: Int = RecyclerView.VERTICAL) {        val adapterTwo = when (adapterCustom) {            is KitAdapter -> adapterCustom            is EventServicesAdapter -> adapterCustom            is PriceInscriptionAdapter -> adapterCustom            is InscriptionWayAdapter -> adapterCustom            is PayAdapter -> adapterCustom            else -> null        }        binding.apply {            rvData.apply {                this.adapter = adapterTwo                setHasFixedSize(true)                layoutManager = LinearLayoutManager(context, orientation, false)                isNestedScrollingEnabled = true            }        }    }}